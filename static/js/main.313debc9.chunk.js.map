{"version":3,"sources":["data.js","Constants.js","components/Note.js","components/NotesTable.js","components/AddNoteModal.js","components/FilterByTitle.js","App.js","index.js"],"names":["data","CONSTANTS","Note","note","deleteNote","index","useState","initStatus","status","onClick","setStatus","className","date","title","body","author","NotesTable","filteredNotes","sortByDate","reverse","activeArrow","setActiveArrow","allNotes","map","key","useEffect","scope","length","colSpan","AddNoteModal","onCloseRequest","addNewNoteToState","dateObj","Date","getDate","getMonth","getFullYear","submitted","newNote","setNewNote","inputTitle","current","focus","useRef","setSubmitButton","noteStatus","handleChange","e","target","name","value","role","id","type","aria-hidden","onSubmit","preventDefault","htmlFor","onChange","ref","data-dismiss","FilterByTitle","notes","getInputValue","App","setNotes","showModal","setShowModal","setFilteredNotes","search","setSearch","setReverse","filter","slice","inputValue","toLowerCase","newStateOfNotes","indexOf","window","confirm","reverseParam","prevNotes","sort","a","b","split","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.313debc9.chunk.js","sourcesContent":["const data = [\r\n  {\r\n    \"date\":\"21/10/2010\",\r\n    \"title\":\"first note\",\r\n    \"body\":\"text about note 01\",\r\n    \"author\":\"Vladimir\",\r\n    \"status\":\"published\"\r\n  },\r\n  {\r\n    \"date\":\"5/8/2019\",\r\n    \"title\":\"second note\",\r\n    \"body\":\"text about note 02\",\r\n    \"author\":\"Vladimir\",\r\n    \"status\":\"published\"\r\n  },\r\n  {\r\n    \"date\":\"24/12/2008\",\r\n    \"title\":\"third note\",\r\n    \"body\":\"text about note 03\",\r\n    \"author\":\"Vladimir\",\r\n    \"status\":\"draft\"\r\n  },\r\n  {\r\n    \"date\":\"17/12/2018\",\r\n    \"title\":\"fourth note\",\r\n    \"body\":\"text about note 04\",\r\n    \"author\":\"Vladimir\",\r\n    \"status\":\"draft\"\r\n  },\r\n  {\r\n    \"date\":\"7/7/2008\",\r\n    \"title\":\"fifth note\",\r\n    \"body\":\"text about note 05\",\r\n    \"author\":\"Vladimir\",\r\n    \"status\":\"published\"\r\n  },\r\n];\r\n\r\nexport default data\r\n","\nexport const CONSTANTS = {\n  PUBLISHED: \"published\",\n  DRAFT: \"draft\",\n  ARROW_UP: \"arrow-up\",\n  ARROW_DOWN:\"arrow-down\",\n  DELETE_MESSAGE: \"Are you sure to delete this note?\",\n  TITLE_ERROR_MESSAGE: \"Title is required\",\n  AUTHOR_ERROR_MESSAGE: \"Author name is required\",\n  BODY_ERROR_MESSAGE: \"Note is required\",\n  IS_INVALID: \"is-invalid\",\n  NO_RESULTS: \"No filter results\"\n};\n","import React, { useState } from 'react';\nimport { CONSTANTS } from \"../Constants\"\n\nfunction Note({ note, deleteNote, index }) {\n\n  const [status, setStatus] = useState(() => {\n    const initStatus = CONSTANTS.PUBLISHED;\n    return  note.status === initStatus ?\n            note.status :\n            <button onClick={ () => setStatus(initStatus)}\n              className=\"btn btn-primary\">\n              Publish\n            </button>\n    }\n  );\n\n  return (\n    <tr>\n      <td className=\"align-middle\">{ note.date }</td>\n      <td className=\"align-middle\">{ note.title }</td>\n      <td className=\"align-middle\">{ note.body }</td>\n      <td className=\"align-middle\">{ note.author }</td>\n      <td className=\"align-middle\">{ status }</td>\n      <td className=\"align-middle\">\n        <button onClick={ () => deleteNote(index) } className=\"btn btn-danger\">Delete</button>\n      </td>\n    </tr>\n  );\n}\n\nexport default Note;\n","import React, {useEffect, useState} from 'react';\nimport Note from \"./Note\"\nimport { CONSTANTS }from '../Constants'\n\nfunction NotesTable({ filteredNotes, deleteNote, sortByDate, reverse }) {\n\n  const[ activeArrow, setActiveArrow ] = useState(\"\");\n\n  const allNotes = filteredNotes.map(( note, index ) => {\n    return <Note note = { note }\n                 key={ index }\n                 index={ index }\n                 deleteNote={ deleteNote }/>\n  });\n\n  useEffect(() => {\n    !(activeArrow ===\"\" && reverse === false) &&\n    setActiveArrow( reverse ?\n                    CONSTANTS.ARROW_UP :\n                    CONSTANTS.ARROW_DOWN\n    )\n  },[reverse, activeArrow]);\n\n  return (\n    <table className=\"table table-striped\">\n      <thead>\n      <tr>\n        <th scope=\"col\">\n          <span className=\"d-flex justify-content-between\">\n            Date\n            <span onClick={() => sortByDate()}\n                  className={`sort-by ${activeArrow}`}>\n            </span>\n          </span>\n        </th>\n        <th scope=\"col\">Title</th>\n        <th scope=\"col\">Description</th>\n        <th scope=\"col\">Author</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Action</th>\n      </tr>\n      </thead>\n      <tbody>\n      { allNotes.length ? allNotes :\n        <tr>\n          <td className=\"no-results text-center align-middle\"\n                colSpan={12}>\n                { CONSTANTS.NO_RESULTS }\n          </td>\n        </tr>\n      }\n      </tbody>\n    </table>\n  );\n}\n\nexport default NotesTable;\n","import React, {useState, useRef, useEffect} from 'react';\nimport { CONSTANTS } from \"../Constants\"\n\nfunction AddNoteModal({ onCloseRequest, addNewNoteToState }) {\n\n  const [date] = useState(() => {\n    const dateObj = new Date();\n    const day = dateObj.getDate();\n    const month = dateObj.getMonth() + 1;\n    const year = dateObj.getFullYear();\n\n    return day + \"/\" + month + \"/\" + year;\n  });\n\n  const [newNote, setNewNote] = useState({\n    date: date,\n    title:\"\",\n    body:\"\",\n    author:\"\",\n    status: CONSTANTS.PUBLISHED,\n    submitted: false\n  });\n\n  useEffect(()=>{\n    inputTitle.current.focus();\n  }, []);\n\n  const inputTitle = useRef();\n\n  const setSubmitButton = (noteStatus) => {\n    const status = noteStatus !== CONSTANTS.PUBLISHED ?\n                    CONSTANTS.DRAFT :\n                    noteStatus;\n\n    setNewNote({\n      ...newNote, status\n    })\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setNewNote({\n      ...newNote, submitted: true\n    });\n\n    if(newNote.title && newNote.author && newNote.body) {\n      addNewNoteToState(newNote);\n      onCloseRequest();\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setNewNote({\n      ...newNote, [name]: value\n    })\n  };\n\n  return (\n    <>\n      <div className=\"modal fade show d-block\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Note</h5>\n              <button onClick={()=> onCloseRequest()} type=\"button\" className=\"close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body pb-0 px-0\">\n              <form onSubmit={ handleSubmit }>\n                <div className=\"form-group px-3\">\n                  <label htmlFor=\"title\" className=\"col-form-label\">Title:</label>\n                  <input onChange={ handleChange }\n                         type=\"text\"\n                         ref={ inputTitle }\n                         value={ newNote.title }\n                         className={`form-control \n                                      ${ newNote.submitted && !newNote.title ?\n                                       CONSTANTS.IS_INVALID :\n                                       \"\"}`\n                         }\n                         name=\"title\"\n                         id=\"title\"\n                  />\n                  { newNote.submitted && !newNote.title &&\n                  <p className=\"invalid-feedback\">{ CONSTANTS.TITLE_ERROR_MESSAGE }</p>}\n                </div>\n                <div className=\"form-group px-3\">\n                  <label htmlFor=\"author\" className=\"col-form-label\">Author name:</label>\n                  <input onChange={ handleChange }\n                         type=\"text\"\n                         value={ newNote.author }\n                         className={`form-control \n                                      ${ newNote.submitted && !newNote.author ? \n                                        CONSTANTS.IS_INVALID : \n                                        \"\"}`\n                         }\n                         name=\"author\"\n                         id=\"author\" />\n                  { newNote.submitted && !newNote.author &&\n                    <p className=\"invalid-feedback\">{ CONSTANTS.AUTHOR_ERROR_MESSAGE }</p>\n                  }\n                </div>\n                <div className=\"form-group px-3\">\n                  <label htmlFor=\"message-text\" className=\"col-form-label\">Description:</label>\n                  <textarea onChange={ handleChange }\n                            value={ newNote.body }\n                            className={`form-control \n                                          ${ newNote.submitted && !newNote.body ?\n                                          CONSTANTS.IS_INVALID :\n                                          \"\"}`\n                            }\n                            name=\"body\"\n                            id=\"message-text\">\n                  </textarea>\n                  { newNote.submitted && !newNote.body &&\n                  <p className=\"invalid-feedback\">{ CONSTANTS.BODY_ERROR_MESSAGE }</p>\n                  }\n                </div>\n                <div className=\"modal-footer mt-5\">\n                  <button onClick={() => onCloseRequest()} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                  <button onClick={ () => setSubmitButton() } type=\"submit\" className=\"btn btn-primary\">Save as Draft</button>\n                  <button onClick={ () => setSubmitButton(newNote.status) } type=\"submit\" className=\"btn btn-primary\">Add Note</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-backdrop fade show\"></div>\n    </>\n  );\n}\n\nexport default AddNoteModal;\n","import React from 'react';\r\n\r\nfunction FilterByTitle({ notes, getInputValue }) {\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    getInputValue(value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"inputFilter\" className=\"col-sm-2 col-form-label px-0\">Filter by title</label>\r\n      <div className=\"col-sm-2 pl-0\">\r\n        <input type=\"text\" onChange={ handleChange } value={ notes.title } name=\"title\" className=\"form-control\" id=\"inputFilter\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterByTitle;\r\n","import React, { useEffect, useState } from \"react\"\nimport data from \"./data.js\"\n\nimport NotesTable from \"./components/NotesTable\"\nimport AddNoteModal from \"./components/AddNoteModal\"\nimport FilterByTitle from \"./components/FilterByTitle\"\nimport { CONSTANTS } from \"./Constants\"\n\nfunction App() {\n\n  const [notes, setNotes] = useState(data);\n  const [showModal, setShowModal] = useState(false);\n  const [filteredNotes, setFilteredNotes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [reverse, setReverse] = useState(false);\n\n  useEffect(() => {\n    setFilteredNotes(\n\n      notes.filter(( note ) => {\n        return note.title.slice(0, search.length) === search\n      })\n    )\n  }, [search, notes]);\n\n  const getInputValue =  (inputValue) => {\n    setSearch(inputValue.toLowerCase())\n  };\n\n  const addNewNoteToState = (newNote) => {\n    setNotes([...notes, newNote])\n  };\n\n  const deleteNote = (index)=>{\n    const newStateOfNotes = notes.filter((note)=>{\n      return notes.indexOf(note) !== index\n    });\n\n    window.confirm( CONSTANTS.DELETE_MESSAGE);\n    setNotes(newStateOfNotes);\n  };\n\n  const sortByDate = () => {\n    const reverseParam = reverse ? -1: 1;\n    setReverse(!reverse);\n\n    setNotes(prevNotes => {\n      return [...prevNotes].sort((a, b) => {\n        return reverseParam * (new Date(...a.date.split(\"/\")) - new Date(...b.date.split(\"/\")))\n      });\n    })\n  };\n\n  return (\n    <div className=\"container\">\n      <h3 className=\"text-center mt-5\">Notes App</h3>\n\n      <FilterByTitle notes = { notes }\n                     getInputValue = { getInputValue }\n      />\n      <NotesTable filteredNotes={ filteredNotes }\n                  deleteNote={ deleteNote }\n                  sortByDate = { sortByDate }\n                  reverse ={ reverse }\n      />\n      { showModal && (\n        <AddNoteModal onCloseRequest={() => setShowModal(false)}\n                      addNewNoteToState={ addNewNoteToState }\n        />\n      )}\n\n      <button onClick={() => {setShowModal(true)}} className=\"btn btn-primary\">New note</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.scss'\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n"],"sourceRoot":""}