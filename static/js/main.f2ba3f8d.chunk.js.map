{"version":3,"sources":["Constants.js","components/Note.js","components/NotesTable.js","components/AddNoteModal.js","components/FilterByTitle.js","App.js","index.js"],"names":["CONSTANTS","Note","note","deleteNote","index","useState","initStatus","status","onClick","setStatus","className","date","title","body","author","NotesTable","notes","sortByDate","reverse","inputValue","filteredNotes","setFilteredNotes","activeArrow","setActiveArrow","useEffect","filter","slice","length","toLowerCase","allNotes","map","key","scope","colSpan","AddNoteModal","onCloseRequest","addNewNoteToState","dateObj","Date","day","getDate","getMonth","getFullYear","submitted","newNote","setNewNote","inputTitle","current","focus","useRef","setSubmitButton","noteStatus","handleChange","e","target","name","value","role","id","type","aria-hidden","onSubmit","preventDefault","htmlFor","onChange","ref","data-dismiss","FilterByTitle","getInputValue","App","setNotes","showModal","setShowModal","setReverse","setInputValue","fetch","then","res","json","data","newStateOfNotes","indexOf","window","confirm","reverseParam","prevNotes","sort","a","b","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f2ba3f8d.chunk.js","sourcesContent":["\r\nexport const CONSTANTS = {\r\n  PUBLISHED: \"published\",\r\n  DRAFT: \"draft\",\r\n  ARROW_UP: \"arrow-up\",\r\n  ARROW_DOWN:\"arrow-down\",\r\n  DELETE_MESSAGE: \"Are you sure to delete this note?\",\r\n  TITLE_ERROR_MESSAGE: \"Title is required\",\r\n  AUTHOR_ERROR_MESSAGE: \"Author name is required\",\r\n  BODY_ERROR_MESSAGE: \"Note is required\",\r\n  IS_INVALID: \"is-invalid\",\r\n  NO_RESULTS: \"No filter results\"\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CONSTANTS } from \"../Constants\"\r\n\r\nfunction Note({ note, deleteNote, index }) {\r\n\r\n  const [status, setStatus] = useState(() => {\r\n    const initStatus = CONSTANTS.PUBLISHED;\r\n    return  note.status === initStatus ?\r\n            note.status :\r\n            <button onClick={ () => setStatus(initStatus)}\r\n              className=\"btn btn-primary\">\r\n              Publish\r\n            </button>\r\n    }\r\n  );\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"align-middle\">{ note.date }</td>\r\n      <td className=\"align-middle\">{ note.title }</td>\r\n      <td className=\"align-middle\">{ note.body }</td>\r\n      <td className=\"align-middle\">{ note.author }</td>\r\n      <td className=\"align-middle\">{ status }</td>\r\n      <td className=\"align-middle\">\r\n        <button onClick={ () => deleteNote(index) } className=\"btn btn-danger\">Delete</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Note from \"./Note\"\r\nimport { CONSTANTS }from '../Constants'\r\n\r\nfunction NotesTable({ notes, deleteNote, sortByDate, reverse, inputValue }) {\r\n\r\n  const [filteredNotes, setFilteredNotes] = useState(notes);\r\n  const[ activeArrow, setActiveArrow ] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n    setFilteredNotes(\r\n      notes.filter(( note ) => {\r\n        return note.title.slice(0, inputValue.length) === inputValue.toLowerCase()\r\n      })\r\n    )\r\n  }, [notes, inputValue]);\r\n\r\n  useEffect(() => {\r\n    !(activeArrow ===\"\" && reverse === false) &&\r\n    setActiveArrow( reverse ?\r\n                    CONSTANTS.ARROW_UP :\r\n                    CONSTANTS.ARROW_DOWN\r\n    )\r\n  },[reverse, activeArrow]);\r\n\r\n  const allNotes = filteredNotes.map(( note, index ) => {\r\n    return <Note note = { note }\r\n                 key={ index }\r\n                 index={ index }\r\n                 deleteNote={ deleteNote }/>\r\n  });\r\n\r\n  return (\r\n    <table className=\"table table-striped\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\">\r\n          <span className=\"d-flex justify-content-between\">\r\n            Date\r\n            <span onClick={() => sortByDate()}\r\n                  className={`sort-by ${activeArrow}`}>\r\n            </span>\r\n          </span>\r\n        </th>\r\n        <th scope=\"col\">Title</th>\r\n        <th scope=\"col\">Description</th>\r\n        <th scope=\"col\">Author</th>\r\n        <th scope=\"col\">Status</th>\r\n        <th scope=\"col\">Action</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      { allNotes.length ? allNotes :\r\n        <tr>\r\n          <td className=\"no-results text-center align-middle\"\r\n                colSpan={12}>\r\n                { CONSTANTS.NO_RESULTS }\r\n          </td>\r\n        </tr>\r\n      }\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default NotesTable;\r\n","import React, {useState, useRef, useEffect} from 'react';\r\nimport { CONSTANTS } from \"../Constants\"\r\n\r\nfunction AddNoteModal({ onCloseRequest, addNewNoteToState }) {\r\n\r\n  const [date] = useState(() => {\r\n    const dateObj = new Date();\r\n    const day = dateObj.getDate();\r\n    const month = dateObj.getMonth() + 1;\r\n    const year = dateObj.getFullYear();\r\n\r\n    return month + \"/\" + day + \"/\" + year;\r\n  });\r\n\r\n  const [newNote, setNewNote] = useState({\r\n    date: date,\r\n    title:\"\",\r\n    body:\"\",\r\n    author:\"\",\r\n    status: CONSTANTS.PUBLISHED,\r\n    submitted: false\r\n  });\r\n\r\n  useEffect(()=>{\r\n    inputTitle.current.focus();\r\n  }, []);\r\n\r\n  const inputTitle = useRef();\r\n\r\n  const setSubmitButton = (noteStatus) => {\r\n    const status = noteStatus !== CONSTANTS.PUBLISHED ?\r\n                    CONSTANTS.DRAFT :\r\n                    noteStatus;\r\n\r\n    setNewNote({\r\n      ...newNote, status\r\n    })\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setNewNote({\r\n      ...newNote, submitted: true\r\n    });\r\n\r\n    if(newNote.title && newNote.author && newNote.body) {\r\n      addNewNoteToState(newNote);\r\n      onCloseRequest();\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setNewNote({\r\n      ...newNote, [name]: value\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal fade show d-block\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Note</h5>\r\n              <button onClick={()=> onCloseRequest()} type=\"button\" className=\"close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body pb-0 px-0\">\r\n              <form onSubmit={ handleSubmit }>\r\n                <div className=\"form-group px-3\">\r\n                  <label htmlFor=\"title\" className=\"col-form-label\">Title:</label>\r\n                  <input onChange={ handleChange }\r\n                         type=\"text\"\r\n                         ref={ inputTitle }\r\n                         value={ newNote.title }\r\n                         className={`form-control \r\n                                      ${ newNote.submitted && !newNote.title ?\r\n                                       CONSTANTS.IS_INVALID :\r\n                                       \"\"}`\r\n                         }\r\n                         name=\"title\"\r\n                         id=\"title\"\r\n                  />\r\n                  { newNote.submitted && !newNote.title &&\r\n                  <p className=\"invalid-feedback\">{ CONSTANTS.TITLE_ERROR_MESSAGE }</p>}\r\n                </div>\r\n                <div className=\"form-group px-3\">\r\n                  <label htmlFor=\"author\" className=\"col-form-label\">Author name:</label>\r\n                  <input onChange={ handleChange }\r\n                         type=\"text\"\r\n                         value={ newNote.author }\r\n                         className={`form-control \r\n                                      ${ newNote.submitted && !newNote.author ? \r\n                                        CONSTANTS.IS_INVALID : \r\n                                        \"\"}`\r\n                         }\r\n                         name=\"author\"\r\n                         id=\"author\" />\r\n                  { newNote.submitted && !newNote.author &&\r\n                    <p className=\"invalid-feedback\">{ CONSTANTS.AUTHOR_ERROR_MESSAGE }</p>\r\n                  }\r\n                </div>\r\n                <div className=\"form-group px-3\">\r\n                  <label htmlFor=\"message-text\" className=\"col-form-label\">Description:</label>\r\n                  <textarea onChange={ handleChange }\r\n                            value={ newNote.body }\r\n                            className={`form-control \r\n                                          ${ newNote.submitted && !newNote.body ?\r\n                                          CONSTANTS.IS_INVALID :\r\n                                          \"\"}`\r\n                            }\r\n                            name=\"body\"\r\n                            id=\"message-text\">\r\n                  </textarea>\r\n                  { newNote.submitted && !newNote.body &&\r\n                  <p className=\"invalid-feedback\">{ CONSTANTS.BODY_ERROR_MESSAGE }</p>\r\n                  }\r\n                </div>\r\n                <div className=\"modal-footer mt-5\">\r\n                  <button onClick={() => onCloseRequest()} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                  <button onClick={ () => setSubmitButton() } type=\"submit\" className=\"btn btn-primary\">Save as Draft</button>\r\n                  <button onClick={ () => setSubmitButton(newNote.status) } type=\"submit\" className=\"btn btn-primary\">Add Note</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-backdrop fade show\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddNoteModal;\r\n","import React from 'react';\r\n\r\nfunction FilterByTitle({ notes, getInputValue }) {\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    getInputValue(value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"inputFilter\"\r\n             className=\"col-sm-2 col-form-label px-0\">\r\n              Filter by title\r\n      </label>\r\n      <div className=\"col-sm-2 pl-0\">\r\n        <input type=\"text\" onChange={ handleChange }\r\n               value={ notes.title }\r\n               name=\"title\"\r\n               className=\"form-control\"\r\n               id=\"inputFilter\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterByTitle;\r\n","import React, { useEffect, useState } from \"react\"\r\n\r\nimport NotesTable from \"./components/NotesTable\"\r\nimport AddNoteModal from \"./components/AddNoteModal\"\r\nimport FilterByTitle from \"./components/FilterByTitle\"\r\nimport { CONSTANTS } from \"./Constants\"\r\n\r\nfunction App() {\r\n\r\n  const [notes, setNotes] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [reverse, setReverse] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n    fetch(\"https://raw.githubusercontent.com/vlappdev/notes/master/src/notes.json\")\r\n      .then(res => {\r\n        return res.json()\r\n      })\r\n      .then( data => {\r\n        setNotes(data);\r\n      });\r\n  },[]);\r\n\r\n  const getInputValue = (inputValue) => {\r\n    setInputValue(inputValue)\r\n  };\r\n\r\n  const addNewNoteToState = (newNote) => {\r\n    setNotes([...notes, newNote])\r\n  };\r\n\r\n  const deleteNote = (index)=>{\r\n    const newStateOfNotes = notes.filter((note)=>{\r\n      return notes.indexOf(note) !== index\r\n    });\r\n\r\n    window.confirm( CONSTANTS.DELETE_MESSAGE);\r\n    setNotes(newStateOfNotes);\r\n  };\r\n\r\n  const sortByDate = () => {\r\n    const reverseParam = reverse ? -1: 1;\r\n    setReverse(!reverse);\r\n\r\n    setNotes(prevNotes => {\r\n      return [...prevNotes].sort((a, b) => {\r\n        return reverseParam * (new Date(a.date) - new Date(b.date))\r\n      });\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"text-center mt-5\">Notes App</h3>\r\n\r\n      <FilterByTitle notes = { notes }\r\n                     getInputValue = { getInputValue }\r\n      />\r\n      <NotesTable notes={ notes }\r\n                  deleteNote={ deleteNote }\r\n                  sortByDate = { sortByDate }\r\n                  reverse ={ reverse }\r\n                  inputValue = { inputValue }\r\n      />\r\n      { showModal && (\r\n        <AddNoteModal onCloseRequest={() => setShowModal(false)}\r\n                      addNewNoteToState={ addNewNoteToState }\r\n        />\r\n      )}\r\n\r\n      <button onClick={() => {setShowModal(true)}}\r\n              className=\"btn btn-primary\">\r\n              New note\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.scss'\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n"],"sourceRoot":""}